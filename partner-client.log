Request #1: getPeopleList()
=> Info: return the list of all the people in the database
=> Result: OK, list has 10 elements

Person with ID=1
--> Name: John
--> Lastname: Norris
--> Email: chuck.norris@gmail.com
--> Birthdate: 31/12/1944
--> Current measure: 
	Measure with ID=457
	--> Measure Type: height
	--> Value: 140
	--> Data type : integer
	--> Date of registration: 22/05/2016

	Measure with ID=7
	--> Measure Type: weight
	--> Value: 75
	--> Data type : double
	--> Date of registration: 08/10/2016

------------------
Person with ID=2
--> Name: Pallino
--> Lastname: Pinco
--> Email: pallino.panco@gmail.com
--> Birthdate: 16/07/1964
--> Current measure: 
	Measure with ID=10
	--> Measure Type: height
	--> Value: 171
	--> Data type : integer
	--> Date of registration: 09/10/2016

	Measure with ID=9
	--> Measure Type: weight
	--> Value: 75
	--> Data type : double
	--> Date of registration: 04/08/2016

------------------
Person with ID=3
--> Name: Pappo
--> Lastname: Pippo
--> Email: pippo.pappo@gmail.com
--> Birthdate: 08/12/1959
--> Current measure: 
	Measure with ID=12
	--> Measure Type: height
	--> Value: 159
	--> Data type : integer
	--> Date of registration: 14/11/2016

	Measure with ID=5
	--> Measure Type: weight
	--> Value: 55
	--> Data type : double
	--> Date of registration: 22/06/2015

------------------
Person with ID=4
--> Name: Sara
--> Lastname: Rossi
--> Email: sara@gmail.com
--> Birthdate: 09/11/1993
--> Current measure: 
	Measure with ID=708
	--> Measure Type: height
	--> Value: 156
	--> Data type : integer
	--> Date of registration: 10/10/2016

	Measure with ID=607
	--> Measure Type: weight
	--> Value: 73
	--> Data type : double
	--> Date of registration: 24/01/2015

------------------
Person with ID=5
--> Name: John
--> Lastname: Doe
--> Email: johndoe@gmail.com
--> Birthdate: 19/10/1985
--> Current measure: 
	Measure with ID=608
	--> Measure Type: height
	--> Value: 169
	--> Data type : integer
	--> Date of registration: 09/11/2015

	Measure with ID=757
	--> Measure Type: weight
	--> Value: 60
	--> Data type : double
	--> Date of registration: 19/05/2015

------------------
Person with ID=6
--> Name: Tizio
--> Lastname: Caio
--> Email: tc@gmail.com
--> Birthdate: 31/12/1979
--> Current measure: 
	Measure with ID=663
	--> Measure Type: height
	--> Value: 156
	--> Data type : integer
	--> Date of registration: 10/10/2016

------------------
Person with ID=7
--> Name: John
--> Lastname: Fidge
--> Email: me@gmail.com
--> Birthdate: 01/01/1963
--> Current measure: 
	Measure with ID=308
	--> Measure Type: height
	--> Value: 156
	--> Data type : integer
	--> Date of registration: 10/10/2016

	Measure with ID=707
	--> Measure Type: weight
	--> Value: 60
	--> Data type : double
	--> Date of registration: 19/05/2015

------------------
Person with ID=8
--> Name: Sarah
--> Lastname: Johnnes
--> Email: me@gmail.com
--> Birthdate: 01/01/1963
--> Current measure: 
	Measure with ID=307
	--> Measure Type: weight
	--> Value: 60
	--> Data type : double
	--> Date of registration: 19/05/2015

------------------
Person with ID=9
--> Name: Pallino
--> Lastname: Pinco
--> Email: pallino.panco@gmail.com
--> Birthdate: 16/07/1964
------------------
Person with ID=10
--> Name: Jane
--> Lastname: Fidge
--> Email: me@gmail.com
--> Birthdate: 01/01/1963
--> Current measure: 
	Measure with ID=808
	--> Measure Type: height
	--> Value: 156
	--> Data type : integer
	--> Date of registration: 10/10/2016

	Measure with ID=662
	--> Measure Type: weight
	--> Value: 60
	--> Data type : double
	--> Date of registration: 19/05/2015


************************************

Request #2: readPerson(int id)
=> Info: return the personal information and the current measures of the first Person in db (id=1)
=> Result: OK, Found Person by id =1

Person with ID=1
--> Name: John
--> Lastname: Norris
--> Email: chuck.norris@gmail.com
--> Birthdate: 31/12/1944
--> Current measure: 
	Measure with ID=457
	--> Measure Type: height
	--> Value: 140
	--> Data type : integer
	--> Date of registration: 22/05/2016

	Measure with ID=7
	--> Measure Type: weight
	--> Value: 75
	--> Data type : double
	--> Date of registration: 08/10/2016


************************************

Request #3: updatePerson(Person p)
=> Info: update the Personal information of the Person returned in request #2 with an extra F in the last name and return it
=> Result: OK, The lastname is changed

Person with ID=1
--> Name: John
--> Lastname: NorrisF
--> Email: chuck.norris@gmail.com
--> Birthdate: 31/12/1944
--> Current measure: 
	Measure with ID=457
	--> Measure Type: height
	--> Value: 140
	--> Data type : integer
	--> Date of registration: 22/05/2016

	Measure with ID=7
	--> Measure Type: weight
	--> Value: 75
	--> Data type : double
	--> Date of registration: 08/10/2016


************************************

Request #4: createPerson(Person p)
=> Info: create a new Person with the personal information and current healtprofile and return it
=> Result: OK, Create person with id =1302

Person with ID=1302
--> Name: Miky
--> Lastname: Test
--> Email: michele@test.it
--> Birthdate: 07/08/1993
--> Current measure: 
	Measure with ID=957
	--> Measure Type: weight
	--> Value: 176
	--> Data type : integer
	--> Date of registration: 01/12/2016


************************************

Request #5: deletePerson(int id)
=> Info: cancel the Person created in the request #4 with id=1302
=> Result: OK,the person with id 1302 was deleted 

Person with ID=1302
--> Name: Miky
--> Lastname: Test
--> Email: michele@test.it
--> Birthdate: 07/08/1993
--> Current measure: 
	Measure with ID=957
	--> Measure Type: weight
	--> Value: 176
	--> Data type : integer
	--> Date of registration: 01/12/2016


************************************

Request #6: readPersonHistory(Long id, String measureType)
=> Info: return the list of values (the history) of weight for Person with id=1
=> Result: OK,the person has 2 weight 

Measure with ID=1
	--> Measure Type: weight
	--> Value: 80
	--> Data type : double
	--> Date of registration: 31/12/2015
Measure with ID=7
	--> Measure Type: weight
	--> Value: 75
	--> Data type : double
	--> Date of registration: 08/10/2016

************************************

Request #7: readMeasureTypes()
=> Info: return the list of all measures in the database
=> Result: OK, there are 26 measure in the database 

Measure with ID=1
	--> Measure Type: weight
	--> Value: 80
	--> Data type : double
	--> Date of registration: 31/12/2015
Measure with ID=2
	--> Measure Type: height
	--> Value: 180
	--> Data type : integer
	--> Date of registration: 17/06/2015
Measure with ID=3
	--> Measure Type: weight
	--> Value: 73
	--> Data type : double
	--> Date of registration: 24/01/2015
Measure with ID=4
	--> Measure Type: height
	--> Value: 169
	--> Data type : integer
	--> Date of registration: 09/11/2015
Measure with ID=5
	--> Measure Type: weight
	--> Value: 55
	--> Data type : double
	--> Date of registration: 22/06/2015
Measure with ID=6
	--> Measure Type: height
	--> Value: 158
	--> Data type : integer
	--> Date of registration: 04/11/2015
Measure with ID=7
	--> Measure Type: weight
	--> Value: 75
	--> Data type : double
	--> Date of registration: 08/10/2016
Measure with ID=8
	--> Measure Type: height
	--> Value: 183
	--> Data type : integer
	--> Date of registration: 22/03/2016
Measure with ID=9
	--> Measure Type: weight
	--> Value: 75
	--> Data type : double
	--> Date of registration: 04/08/2016
Measure with ID=10
	--> Measure Type: height
	--> Value: 171
	--> Data type : integer
	--> Date of registration: 09/10/2016
Measure with ID=11
	--> Measure Type: weight
	--> Value: 52
	--> Data type : double
	--> Date of registration: 22/03/2015
Measure with ID=12
	--> Measure Type: height
	--> Value: 159
	--> Data type : integer
	--> Date of registration: 14/11/2016
Measure with ID=307
	--> Measure Type: weight
	--> Value: 60
	--> Data type : double
	--> Date of registration: 19/05/2015
Measure with ID=308
	--> Measure Type: height
	--> Value: 156
	--> Data type : integer
	--> Date of registration: 10/10/2016
Measure with ID=457
	--> Measure Type: height
	--> Value: 140
	--> Data type : integer
	--> Date of registration: 22/05/2016
Measure with ID=507
	--> Measure Type: height
	--> Value: 140
	--> Data type : integer
	--> Date of registration: 22/05/2016
Measure with ID=607
	--> Measure Type: weight
	--> Value: 73
	--> Data type : double
	--> Date of registration: 24/01/2015
Measure with ID=608
	--> Measure Type: height
	--> Value: 169
	--> Data type : integer
	--> Date of registration: 09/11/2015
Measure with ID=662
	--> Measure Type: weight
	--> Value: 60
	--> Data type : double
	--> Date of registration: 19/05/2015
Measure with ID=663
	--> Measure Type: height
	--> Value: 156
	--> Data type : integer
	--> Date of registration: 10/10/2016
Measure with ID=707
	--> Measure Type: weight
	--> Value: 60
	--> Data type : double
	--> Date of registration: 19/05/2015
Measure with ID=708
	--> Measure Type: height
	--> Value: 156
	--> Data type : integer
	--> Date of registration: 10/10/2016
Measure with ID=757
	--> Measure Type: weight
	--> Value: 60
	--> Data type : double
	--> Date of registration: 19/05/2015
Measure with ID=758
	--> Measure Type: height
	--> Value: 156
	--> Data type : integer
	--> Date of registration: 10/10/2016
Measure with ID=807
	--> Measure Type: weight
	--> Value: 60
	--> Data type : double
	--> Date of registration: 19/05/2015
Measure with ID=808
	--> Measure Type: height
	--> Value: 156
	--> Data type : integer
	--> Date of registration: 10/10/2016

************************************

Request #8: readPersonMeasure(Long id, String measureType, Long mid)
=> Info: return the measure with mid=1 and type=weight for Person with id=1
=> Result: OK, Found Measure by mid =1

Measure with ID=1
	--> Measure Type: weight
	--> Value: 80
	--> Data type : double
	--> Date of registration: 31/12/2015

************************************

Request #9: savePersonMeasure(Long id, Measure m)
=> Info: save a new measure of Person identified with id=1 and archive the old value in the history
=> Result: OK, New Measure with mid =958

Measure with ID=958
	--> Measure Type: height
	--> Value: 180
	--> Data type : integer
	--> Date of registration: 09/12/2016

************************************

Request #10: updatePersonMeasure(Long id, Measure m)
=> Info: update the value of the measure created in request #9, the new value is 185
=> Result: OK, the value is changed at 185

Measure with ID=958
	--> Measure Type: height
	--> Value: 185
	--> Data type : integer
	--> Date of registration: 09/12/2016

************************************

